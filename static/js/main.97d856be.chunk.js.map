{"version":3,"sources":["commands.js","Editor.js","App.js","useLocalStorage.js","index.js"],"names":["IchigimeInput","className","type","Editor","props","onBeforeChange","editor","data","value","onChange","options","lineWrapping","lint","lineNumbers","theme","App","key","initialValue","prefixedKey","useState","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","useLocalStorage","cmlOutput","setCmlOutput","userInputArr","setUserInputArr","userInputArea","useRef","addCommand","document","tmp","push","inputToCML","commands","current","querySelectorAll","res","Array","from","map","command","inputArr","inputValues","input","inputToIchigimeCML","onClick","Date","getTime","ref","Button","variant","alert","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.97d856be.chunk.js","sourcesContent":["export const inputToIchigimeCML = (document) => {\r\n    const inputArr = document.querySelectorAll('input')\r\n    let inputValues = []\r\n    Array.from(inputArr).map(input => inputValues.push(input.value))\r\n    return (\r\n        `P=${inputValues[0]}\\nA=${inputValues[1]}\\nS=${inputValues[2]}\\n`\r\n    )\r\n}\r\n\r\nexport const IchigimeInput = () => {\r\n    return (\r\n        <div className=\"ichigime-input\">\r\n            <input type=\"text\"></input>\r\n            <p><span className=\"tanni\">mm</span>を</p>\r\n            <input type=\"text\"></input>\r\n            <p><span className=\"tanni\">秒</span>で加速して</p>\r\n            <input type=\"text\"></input>\r\n            <p><span className=\"tanni\">秒</span>で移動する</p>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\n\r\nexport const Editor = (props) => {\r\n\r\n    const handleChange = (editor, data, value) => {\r\n        props.onChange(value)\r\n    }\r\n\r\n    return(\r\n        <div className=\"cml-editor-container\">\r\n            <ControlledEditor \r\n                onBeforeChange={handleChange}\r\n                value={props.value}\r\n                className=\"cml-editor\"\r\n                options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    lineNumbers: true,\r\n                    theme: 'material'\r\n                }} \r\n            />\r\n        </div>\r\n    )\r\n}","import { Button } from '@mui/material';\r\nimport React, { useRef, useState } from 'react';\r\nimport './App.css'\r\nimport { IchigimeInput, inputToIchigimeCML } from './commands';\r\nimport { Editor } from './Editor';\r\nimport useLocalStorage from './useLocalStorage';\r\n\r\nexport const App = () => {\r\n\r\n    const [cmlOutput, setCmlOutput] = useLocalStorage('CML', '')\r\n    const [userInputArr, setUserInputArr] = useState([])\r\n\r\n    const userInputArea = useRef()\r\n\r\n    const addCommand = (document) => {\r\n        let tmp = [...userInputArr]\r\n        tmp.push(document)\r\n        setUserInputArr(tmp)\r\n    }\r\n\r\n    const inputToCML = () => {\r\n        const commands = userInputArea.current.querySelectorAll('div')\r\n        let res = cmlOutput\r\n        Array.from(commands).map(command => {\r\n            switch (command.className) {\r\n                case 'ichigime-input':\r\n                    res += inputToIchigimeCML(command)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            return 0\r\n        })\r\n        setCmlOutput(res)\r\n    } \r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <section className=\"command-selector-section\">\r\n                <div className=\"command-selector unselectable\" onClick={() => addCommand(<IchigimeInput key={new Date().getTime()}/>)}><p>位置決め</p><i className=\"fas fa-plus-circle\"></i></div>\r\n                <div className=\"command-selector unselectable\" onClick={() => addCommand(<IchigimeInput key={new Date().getTime()}/>)}><p>押し付け</p><i className=\"fas fa-plus-circle\"></i></div>\r\n                <div className=\"command-selector unselectable\" onClick={() => addCommand(<IchigimeInput key={new Date().getTime()}/>)}><p>タイマー</p><i className=\"fas fa-plus-circle\"></i></div>\r\n                <div className=\"command-selector unselectable\" onClick={() => addCommand(<IchigimeInput key={new Date().getTime()}/>)}><p>分岐</p><i className=\"fas fa-plus-circle\"></i></div>\r\n                <div className=\"command-selector unselectable\" onClick={() => addCommand(<IchigimeInput key={new Date().getTime()}/>)}><p>演算</p><i className=\"fas fa-plus-circle\"></i></div>\r\n                <div className=\"command-selector unselectable\" onClick={() => addCommand(<IchigimeInput key={new Date().getTime()}/>)}><p>繰り返し</p><i className=\"fas fa-plus-circle\"></i></div>\r\n                <div className=\"command-selector unselectable\" onClick={() => addCommand(<IchigimeInput key={new Date().getTime()}/>)}><p>停止</p><i className=\"fas fa-plus-circle\"></i></div>\r\n            </section>\r\n            <section className=\"user-input-section\">\r\n                <div className=\"user-input-area\" ref={userInputArea}>\r\n                    {userInputArr}\r\n                </div>\r\n                <div className=\"enter-button\">\r\n                    <Button variant=\"contained\" onClick={() => inputToCML()}>入力</Button>\r\n                </div>\r\n            </section>\r\n            <section className=\"cml-output-section\">\r\n                <h3>CML</h3>\r\n                <Editor value={cmlOutput} onChange={setCmlOutput} />\r\n                <div className=\"jikkou-button\">\r\n                    <Button variant=\"contained\" onClick={() => alert(\"実行されました\")}>実行</Button>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\n\r\nconst PREFIX = 'CML-app-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n    const prefixedKey = PREFIX + key\r\n\r\n    const [value, setValue] = useState(() => {\r\n        const jsonValue = localStorage.getItem(prefixedKey)\r\n        if (jsonValue != null) return JSON.parse(jsonValue)\r\n        \r\n        if (typeof initialValue === 'function') {\r\n            return initialValue()\r\n        } else {\r\n            return initialValue\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n    }, [prefixedKey, value])\r\n\r\n    return [value, setValue] \r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}